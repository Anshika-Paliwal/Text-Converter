{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\textutils\\\\src\\\\components\\\\TextForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // useText is a hook \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n\n  const handleUpClick = () => {\n    // console.log(\"upper case was clicked.\" + text);\n    let newText = text.toUpperCase();\n    setText(newText);\n  };\n\n  const handleLoClick = () => {\n    // console.log(\"upper case was clicked.\" + text);\n    let newText = text.toLowerCase();\n    setText(newText);\n  };\n\n  const handleOnChange = event => {\n    // console.log(\"On change\");\n    setText(event.target.value);\n  };\n\n  const handleClearClick = event => {\n    // console.log(\"On change\");\n    let newText = '';\n    setText(newText);\n  };\n\n  const [text, setText] = useState(''); // 'text' here is a state variable that uses 'useState' hook\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: props.heading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          value: text,\n          onChange: handleOnChange,\n          id: \"myBox\",\n          rows: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleUpClick,\n        children: \"Change to Uppercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success mx-2\",\n        onClick: handleLoClick,\n        children: \"Change to Lowercase\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary mx-2\",\n        onClick: handleClearClick,\n        children: \"Clear Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your text Summary:)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Word Count: \", text.split(\" \").length, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"|\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 53\n        }, this), \" Character Count: \", text.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [0.008 * text.split(\" \").length, \" Minutes read.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TextForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = TextForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"sources":["E:/React/textutils/src/components/TextForm.js"],"names":["React","useState","TextForm","props","handleUpClick","newText","text","toUpperCase","setText","handleLoClick","toLowerCase","handleOnChange","event","target","value","handleClearClick","heading","split","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CAAsC;;;;AAEtC,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAMC,aAAa,GAAG,MAAK;AACvB;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,WAAL,EAAd;AACAC,IAAAA,OAAO,CAACH,OAAD,CAAP;AACH,GAJD;;AAKA,QAAMI,aAAa,GAAG,MAAK;AACvB;AACA,QAAIJ,OAAO,GAAGC,IAAI,CAACI,WAAL,EAAd;AACAF,IAAAA,OAAO,CAACH,OAAD,CAAP;AACH,GAJD;;AAKA,QAAMM,cAAc,GAAIC,KAAD,IAAU;AAC7B;AACAJ,IAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAHD;;AAIA,QAAMC,gBAAgB,GAAIH,KAAD,IAAU;AAC/B;AACA,QAAIP,OAAO,GAAG,EAAd;AACAG,IAAAA,OAAO,CAACH,OAAD,CAAP;AACH,GAJD;;AAMA,QAAM,CAACC,IAAD,EAAOE,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CArBoC,CAqBE;;AACtC,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAA,kBAAKE,KAAK,CAACa;AAAX;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI;AAAU,UAAA,SAAS,EAAC,cAApB;AAAmC,UAAA,KAAK,EAAEV,IAA1C;AAAgD,UAAA,QAAQ,EAAEK,cAA1D;AAA0E,UAAA,EAAE,EAAC,OAA7E;AAAqF,UAAA,IAAI,EAAC;AAA1F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAQ,QAAA,SAAS,EAAE,iBAAnB;AAAqC,QAAA,OAAO,EAAEP,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,SAAS,EAAE,sBAAnB;AAA0C,QAAA,OAAO,EAAEK,aAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,SAAS,EAAE,sBAAnB;AAA0C,QAAA,OAAO,EAAEM,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAUA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,mCAAgBT,IAAI,CAACW,KAAL,CAAW,GAAX,EAAgBC,MAAhC,oBAAwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAxC,wBAAmEZ,IAAI,CAACY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,oBAGI;AAAA,+BAAG;AAAA,qBAAI,QAAQZ,IAAI,CAACW,KAAL,CAAW,GAAX,EAAgBC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAIZ;AAAJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA,kBADJ;AAoBH;;GA1CuBJ,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from 'react' // useText is a hook \r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        // console.log(\"upper case was clicked.\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n    }\r\n    const handleLoClick = () =>{\r\n        // console.log(\"upper case was clicked.\" + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n    }\r\n    const handleOnChange = (event) =>{\r\n        // console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const handleClearClick = (event) =>{\r\n        // console.log(\"On change\");\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n\r\n    const [text, setText] = useState(''); // 'text' here is a state variable that uses 'useState' hook\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className= \"btn btn-primary\" onClick={handleUpClick}>Change to Uppercase</button>\r\n            <button className= \"btn btn-success mx-2\" onClick={handleLoClick}>Change to Lowercase</button>\r\n            <button className= \"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-5\">\r\n            <h2>Your text Summary:)</h2>\r\n            <p>Word Count: {text.split(\" \").length} <b>|</b> Character Count: {text.length}</p> {/* \"text.split(\" \")\"\" will give you an array and its length will give number of words.*/} \r\n            <p><b>{0.008 * text.split(\" \").length} Minutes read.</b></p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}